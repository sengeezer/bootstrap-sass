//
// Responsive: Utility classes

.clearfix { @include clearfix(); }

// Accessible yet invisible text
.hide-text { @include hide-text(); }

// Uses box-sizing mixin, so must be defined here
.input-block-level { @include input-block-level(); }

// IE10 in Windows (Phone) 8
//
// Support for responsive views via media queries is kind of borked in IE10, for
// Surface/desktop in split view and for Windows Phone 8. This particular fix
// must be accompanied by a snippet of JavaScript to sniff the user agent and
// apply some conditional CSS to *only* the Surface/desktop Windows 8. Look at
// our Getting Started page for more information on this bug.
//
// For more information, see the following:
//
// Issue: https://github.com/twbs/bootstrap/issues/10497
// Docs: http://getbootstrap.com/getting-started/#browsers
// Source: http://timkadlec.com/2012/10/ie10-snap-mode-and-responsive-design/

@-ms-viewport {
  width: device-width;
}

<<<<<<< HEAD
// Hide from screenreaders and browsers
// Credit: HTML5 Boilerplate
.hidden {
	display: none;
	visibility: hidden;
}

// Visibility utilities

// For desktops
.visible-phone { display: none !important; }
.visible-tablet { display: none !important; }
.hidden-desktop { display: none !important; }
.visible-desktop { display: inherit !important; }

// Tablets & small desktops only
@media (min-width: 768px) and (max-width: 979px) {
	// Hide everything else
	.hidden-desktop { display: inherit !important; }
	.visible-desktop { display: none !important ; }
	// Show
	.visible-tablet { display: inherit !important; }
	// Hide
	.hidden-tablet { display: none !important; }
}

// Phones only
@media (max-width: 767px) {
	// Hide everything else
	.hidden-desktop { display: inherit !important; }
	.visible-desktop { display: none !important; }
	// Show
	.visible-phone { display: inherit !important; } // Use inherit to restore previous behavior
	// Hide
	.hidden-phone { display: none !important; }
=======

// Visibility utilities

@include responsive-invisibility('.visible-xs');

@media (max-width: $screen-xs-max) {
  @include responsive-visibility('.visible-xs');
}

@include responsive-invisibility('.visible-sm');

@media (min-width: $screen-sm-min) and (max-width: $screen-sm-max) {
  @include responsive-visibility('.visible-sm');
>>>>>>> 0d9e96b152f9e7689dc04db90890309315b92176
}

@include responsive-invisibility('.visible-md');

@media (min-width: $screen-md-min) and (max-width: $screen-md-max) {
  @include responsive-visibility('.visible-md');
}

@include responsive-invisibility('.visible-lg');

@media (min-width: $screen-lg-min) {
  @include responsive-visibility('.visible-lg');
}

@media (max-width: $screen-xs-max) {
  @include responsive-invisibility('.hidden-xs');
}

@media (min-width: $screen-sm-min) and (max-width: $screen-sm-max) {
  @include responsive-invisibility('.hidden-sm');
}

@media (min-width: $screen-md-min) and (max-width: $screen-md-max) {
  @include responsive-invisibility('.hidden-md');
}

@media (min-width: $screen-lg-min) {
  @include responsive-invisibility('.hidden-lg');
}


// Print utilities
//
// Media queries are placed on the inside to be mixin-friendly.

@include responsive-invisibility('.visible-print');

@media print {
  @include responsive-visibility('.visible-print');
}

@media print {
  @include responsive-invisibility('.hidden-print');
}
